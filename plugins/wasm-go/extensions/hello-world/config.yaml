admin:
  profile_path: /dev/null
  access_log_path: /dev/null
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 15000

static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 8080
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          access_log:
            - filter:
                not_health_check_filter: {}
              name: envoy.access_loggers.file
              typed_config:
                '@type': type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                log_format:
                  text_format_source:
                    inline_string: '{"model":"%FILTER_STATE(wasm.model:PLAIN)%","input_token":"%FILTER_STATE(wasm.input_token:PLAIN)%","output_token":"%FILTER_STATE(wasm.output_token:PLAIN)%","authority":"%REQ(:AUTHORITY)%","bytes_received":"%BYTES_RECEIVED%","bytes_sent":"%BYTES_SENT%","downstream_local_address":"%DOWNSTREAM_LOCAL_ADDRESS%","downstream_remote_address":"%DOWNSTREAM_REMOTE_ADDRESS%","duration":"%DURATION%","istio_policy_status":"%DYNAMIC_METADATA(istio.mixer:status)%","method":"%REQ(:METHOD)%","path":"%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%","protocol":"%PROTOCOL%","request_id":"%REQ(X-REQUEST-ID)%","requested_server_name":"%REQUESTED_SERVER_NAME%","response_code":"%RESPONSE_CODE%","response_flags":"%RESPONSE_FLAGS%","route_name":"%ROUTE_NAME%","start_time":"%START_TIME%","trace_id":"%REQ(X-B3-TRACEID)%","upstream_cluster":"%UPSTREAM_CLUSTER%","upstream_host":"%UPSTREAM_HOST%","upstream_local_address":"%UPSTREAM_LOCAL_ADDRESS%","upstream_service_time":"%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%","upstream_transport_failure_reason":"%UPSTREAM_TRANSPORT_FAILURE_REASON%","user_agent":"%REQ(USER-AGENT)%","x_forwarded_for":"%REQ(X-FORWARDED-FOR)%"}
                    
                    '
                path: /dev/stdout
          codec_type: AUTO
          stat_prefix: ingress_http
          route_config:
            name: test
            virtual_hosts:
            - name: test
              domains: 
              - "*"
              routes:
              # - name: httpbin
              #   match:
              #     prefix: "/"
              #   route:
              #     cluster: httpbin
              - name: mock
                match:
                  prefix: "/"
                direct_response:
                  status: 200
                  body:
                    inline_string: "[backend] hello world\n"
          http_filters:
          # - name: crash_test
          #   typed_config:
          #     "@type": type.googleapis.com/udpa.type.v1.TypedStruct
          #     type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
          #     value:
          #       config:
          #         name: crash_test
          #         vm_config:
          #           runtime: envoy.wasm.runtime.v8
          #           code:
          #             local:
          #               filename: main.wasm
          #         configuration:
          #           "@type": "type.googleapis.com/google.protobuf.StringValue"
          #           value: |
          #             {
          #               "enable": true
          #             }
          - name: envoy.filters.http.router
            typed_config:
              '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  clusters:
  - name: httpbin
    connect_timeout: 600s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: httpbin
      endpoints:
        - lb_endpoints:
          - endpoint:
              address:
                socket_address:
                  address: httpbin.org
                  port_value: 80
